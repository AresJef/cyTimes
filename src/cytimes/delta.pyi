from typing import overload
import datetime, numpy as np, pandas as pd
from dateutil.relativedelta import relativedelta

DatetimeTypes = datetime.date | datetime.datetime | pd.Timestamp | np.datetime64
DeltaTypes = (
    Delta
    | datetime.timedelta
    | pd.Timedelta
    | relativedelta
    | int
    | float
    | np.timedelta64
)
NumericTypes = int | float | str | bytes | bytearray

class Delta:
    def __init__(
        self,
        years: int = 0,
        months: int = 0,
        days: int = 0,
        weeks: int = 0,
        hours: int = 0,
        minutes: int = 0,
        seconds: int = 0,
        milliseconds: int = 0,
        microseconds: int = 0,
        year: int = -1,
        month: int = -1,
        day: int = -1,
        weekday: int = -1,
        hour: int = -1,
        minute: int = -1,
        second: int = -1,
        millisecond: int = -1,
        microsecond: int = -1,
    ) -> None: ...
    # Property: relative delta
    @property
    def years(self) -> int: ...
    @property
    def months(self) -> int: ...
    @property
    def days(self) -> int: ...
    @property
    def weeks(self) -> int: ...
    @property
    def hours(self) -> int: ...
    @property
    def minutes(self) -> int: ...
    @property
    def seconds(self) -> int: ...
    @property
    def milliseconds(self) -> int: ...
    @property
    def microseconds(self) -> int: ...
    # Properties: absolute delta
    @property
    def year(self) -> int | None: ...
    @property
    def month(self) -> int | None: ...
    @property
    def day(self) -> int | None: ...
    @property
    def weekday(self) -> int | None: ...
    @property
    def hour(self) -> int | None: ...
    @property
    def minute(self) -> int | None: ...
    @property
    def second(self) -> int | None: ...
    @property
    def millisecond(self) -> int | None: ...
    @property
    def microsecond(self) -> int | None: ...
    # Arithmetic: addition
    @overload
    def __add__(self, o: DatetimeTypes) -> datetime.datetime: ...
    @overload
    def __add__(self, o: DeltaTypes) -> Delta: ...
    @overload
    def __radd__(self, o: DatetimeTypes) -> datetime.datetime: ...
    @overload
    def __radd__(self, o: DeltaTypes) -> Delta: ...
    # Arithmetic: substraction
    @overload
    def __sub__(self, o: DeltaTypes) -> Delta: ...
    @overload
    def __rsub__(self, o: DatetimeTypes) -> datetime.datetime: ...
    @overload
    def __rsub__(self, o: DeltaTypes) -> Delta: ...
    # Arithmetic: multiplication
    @overload
    def __mul__(self, o: NumericTypes) -> Delta: ...
    @overload
    def __rmul__(self, o: NumericTypes) -> Delta: ...
    # Arithmetic: division
    @overload
    def __truediv__(self, o: NumericTypes) -> Delta: ...
    # Arithmetic: negation
    def __neg__(self) -> Delta: ...
    # Arithmetic: absolute
    def __abs__(self) -> Delta: ...
    # Comparison
    def __eq__(self, o: object) -> bool: ...
    def __bool__(self) -> bool: ...
    # Representation
    def __repr__(self) -> str: ...
    def __hash__(self) -> int: ...
