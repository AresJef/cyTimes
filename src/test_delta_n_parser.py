import warnings
from typing import Literal
from random import randint
import time, unittest, datetime
import numpy as np, pandas as pd, pendulum as pl
from cytimes import errors
from cytimes.pydt import Pydt
from cytimes.delta import Delta
from dateutil.relativedelta import relativedelta


class TestCase(unittest.TestCase):
    name: str = "Case"
    dts: list[tuple[str, str, str]] = [
        # fmt: off
        ('  July   4 ,  1976   12:01:02   am  ', '1976-07-04 00:01:02', '1976-07-04 00:01:02'),
        ('0003-03-04', '0003-03-04 00:00:00', '0003-03-04 00:00:00'),
        ('0031-02-02T01:01:01', '0031-02-02 01:01:01', '0031-02-02 01:01:01'),
        ('0099-02-02T01:01:01', '0099-02-02 01:01:01', '0099-02-02 01:01:01'),
        ('00:11:25.02', '0001-01-01 00:11:25.020000', '0001-01-01 00:11:25.020000'),
        ('01h02', '0001-01-01 01:02:00', '0001-01-01 01:02:00'),
        ('01h02m03', '0001-01-01 01:02:03', '0001-01-01 01:02:03'),
        ('01h02s', '0001-01-01 01:00:02', '0001-01-01 01:00:02'),
        ('01m02', '0001-01-01 00:01:02', '0001-01-01 00:01:02'),
        ('01m02h', '0001-01-01 02:01:00', '0001-01-01 02:01:00'),
        ('02 08 2023', '2023-02-08 00:00:00', '2023-02-08 00:00:00'),
        ('02 08 2023 12:01', '2023-02-08 12:01:00', '2023-02-08 12:01:00'),
        ('02 08 2023 12:01:01', '2023-02-08 12:01:01', '2023-02-08 12:01:01'),
        ('02 8 2023', '2023-02-08 00:00:00', '2023-02-08 00:00:00'),
        ('02 8 2023 12:01', '2023-02-08 12:01:00', '2023-02-08 12:01:00'),
        ('02 8 2023 12:01:01', '2023-02-08 12:01:01', '2023-02-08 12:01:01'),
        ('02 Ağustos 2023 12:01', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('02 de agosto de 2023', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('02-08-2023 12:01 Uhr', '2023-02-08 12:01:00', '2023-02-08 12:01:00'),
        ('02-08-23', '2023-02-08 00:00:00', '2023-02-08 00:00:00'),
        ('02-Aug-2023', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('02-Aug-2023 12:01 AM', '2023-08-02 00:01:00', '2023-08-02 00:01:00'),
        ('02-Aug-2023 12:01 PM', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('02-August-2023 12:01', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('02-August-2023 12:01 AM', '2023-08-02 00:01:00', '2023-08-02 00:01:00'),
        ('02-August-2023 12:01 PM', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('02-August-23', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('02. August 2023', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('02.08.2023', '2023-02-08 00:00:00', '2023-02-08 00:00:00'),
        ('02/08/2023', '2023-02-08 00:00:00', '2023-02-08 00:00:00'),
        ('02/08/2023 01:01:01', '2023-02-08 01:01:01', '2023-02-08 01:01:01'),
        ('02/08/2023 12:01', '2023-02-08 12:01:00', '2023-02-08 12:01:00'),
        ('02/08/2023 12:01 AM', '2023-02-08 00:01:00', '2023-02-08 00:01:00'),
        ('02/08/2023 12:01 PM', '2023-02-08 12:01:00', '2023-02-08 12:01:00'),
        ('02/08/2023 12:01:01', '2023-02-08 12:01:01', '2023-02-08 12:01:01'),
        ('02/08/23', '2023-02-08 00:00:00', '2023-02-08 00:00:00'),
        ('02:12:10.02', '0001-01-01 02:12:10.020000', '0001-01-01 02:12:10.020000'),
        ('02:17NOV2017', '2017-11-01 02:17:00', '2017-11-01 02:17:00'),
        ('03 25 Sep', '2003-09-25 00:00:00', '2003-09-25 00:00:00'),
        ('04.04.95 01:22', '1995-04-04 01:22:00', '1995-04-04 01:22:00'),
        ('08 02 2023', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('08 02 2023 12:01', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('08 02 2023 12:01:01', '2023-08-02 12:01:01', '2023-08-02 12:01:01'),
        ('08 2 2023', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('08 2 2023 12:01', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('08 2 2023 12:01:01', '2023-08-02 12:01:01', '2023-08-02 12:01:01'),
        ('08-02-2023', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('08-02-2023 01:01 AM', '2023-08-02 01:01:00', '2023-08-02 01:01:00'),
        ('08-02-2023 01:01 PM', '2023-08-02 13:01:00', '2023-08-02 13:01:00'),
        ('08-02-2023 01:01:01', '2023-08-02 01:01:01', '2023-08-02 01:01:01'),
        ('08-02-2023 12:01', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('08-02-2023 12:01 AM', '2023-08-02 00:01:00', '2023-08-02 00:01:00'),
        ('08-02-2023 12:01 PM', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('08-02-2023 12:01:01', '2023-08-02 12:01:01', '2023-08-02 12:01:01'),
        ('08/02/2023 12:01', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('08/02/2023 12:01 PM', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('09 25 2003', '2003-09-25 00:00:00', '2003-09-25 00:00:00'),
        ('09-25-2003', '2003-09-25 00:00:00', '2003-09-25 00:00:00'),
        ('09.25.2003', '2003-09-25 00:00:00', '2003-09-25 00:00:00'),
        ('09/25/2003', '2003-09-25 00:00:00', '2003-09-25 00:00:00'),
        ('090207', '2007-09-02 00:00:00', '2007-09-02 00:00:00'),
        ('10 09 03', '2003-10-09 00:00:00', '2003-10-09 00:00:00'),
        ('10 09 2003', '2003-10-09 00:00:00', '2003-10-09 00:00:00'),
        ('10-09-03', '2003-10-09 00:00:00', '2003-10-09 00:00:00'),
        ('10-09-2003', '2003-10-09 00:00:00', '2003-10-09 00:00:00'),
        ('10.09.03', '2003-10-09 00:00:00', '2003-10-09 00:00:00'),
        ('10.09.2003', '2003-10-09 00:00:00', '2003-10-09 00:00:00'),
        ('10/09/03', '2003-10-09 00:00:00', '2003-10-09 00:00:00'),
        ('10/09/2003', '2003-10-09 00:00:00', '2003-10-09 00:00:00'),
        ('10:01 am', '0001-01-01 10:01:00', '0001-01-01 10:01:00'),
        ('10:01 pm', '0001-01-01 22:01:00', '0001-01-01 22:01:00'),
        ('10:01a.m', '0001-01-01 10:01:00', '0001-01-01 10:01:00'),
        ('10:01a.m.', '0001-01-01 10:01:00', '0001-01-01 10:01:00'),
        ('10:01am', '0001-01-01 10:01:00', '0001-01-01 10:01:00'),
        ('10:01p.m', '0001-01-01 22:01:00', '0001-01-01 22:01:00'),
        ('10:01p.m.', '0001-01-01 22:01:00', '0001-01-01 22:01:00'),
        ('10:01pm', '0001-01-01 22:01:00', '0001-01-01 22:01:00'),
        ('10:36', '0001-01-01 10:36:00', '0001-01-01 10:36:00'),
        ('10:36:28', '0001-01-01 10:36:28', '0001-01-01 10:36:28'),
        ('10am', '0001-01-01 10:00:00', '0001-01-01 10:00:00'),
        ('10h', '0001-01-01 10:00:00', '0001-01-01 10:00:00'),
        ('10h am', '0001-01-01 10:00:00', '0001-01-01 10:00:00'),
        ('10h pm', '0001-01-01 22:00:00', '0001-01-01 22:00:00'),
        ('10h36', '0001-01-01 10:36:00', '0001-01-01 10:36:00'),
        ('10h36.5', '0001-01-01 10:36:30', '0001-01-01 10:36:30'),
        ('10h36m', '0001-01-01 10:36:00', '0001-01-01 10:36:00'),
        ('10h36m28.5s', '0001-01-01 10:36:28.500000', '0001-01-01 10:36:28.500000'),
        ('10h36m28s', '0001-01-01 10:36:28', '0001-01-01 10:36:28'),
        ('10pm', '0001-01-01 22:00:00', '0001-01-01 22:00:00'),
        ('11 AM PM', '0001-01-01 23:00:00', '0001-01-01 23:00:00'),
        ('11 PM', '0001-01-01 23:00:00', '0001-01-01 23:00:00'),
        ('11pm', '0001-01-01 23:00:00', '0001-01-01 23:00:00'),
        ('12 AM 2023-08-02', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('12 AM August 2, 2023', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('12 PM 2023-08-02', '2023-08-02 12:00:00', '2023-08-02 12:00:00'),
        ('12 PM August 2, 2023 AKDT', '2023-08-02 12:00:00', '2023-08-02 12:00:00-08:00'),
        ('12 PM August 2, 2023 AKST', '2023-08-02 12:00:00', '2023-08-02 12:00:00-09:00'),
        ('12 PM August 2, 2023 EST', '2023-08-02 12:00:00', '2023-08-02 12:00:00-05:00'),
        ('12 PM August 2, 2023 GMT', '2023-08-02 12:00:00', '2023-08-02 12:00:00+00:00'),
        ('12 PM August 2, 2023 HST', '2023-08-02 12:00:00', '2023-08-02 12:00:00-10:00'),
        ('12 PM August 2, 2023 MST', '2023-08-02 12:00:00', '2023-08-02 12:00:00-07:00'),
        ('12 PM August 2, 2023 PST', '2023-08-02 12:00:00', '2023-08-02 12:00:00-08:00'),
        ('12 PM August 2, 2023 UTC', '2023-08-02 12:00:00', '2023-08-02 12:00:00+00:00'),
        ('12 PM on August 2, 2023', '2023-08-02 12:00:00', '2023-08-02 12:00:00'),
        ('12, 1952 AD 3:30:42pm', '1952-12-01 15:30:42', '1952-12-01 15:30:42'),
        ('125959.123', '0001-01-01 12:59:59.123000', '0001-01-01 12:59:59.123000'),
        ('12:01 am August 2, 2023', '2023-08-02 00:01:00', '2023-08-02 00:01:00'),
        ('12:01 pm August 2, 2023', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('12:08 PM', '0001-01-01 12:08:00', '0001-01-01 12:08:00'),
        ('12:32', '0001-01-01 12:32:00', '0001-01-01 12:32:00'),
        ('12:32:53', '0001-01-01 12:32:53', '0001-01-01 12:32:53'),
        ('12:32:53.122', '0001-01-01 12:32:53.122000', '0001-01-01 12:32:53.122000'),
        ('12am August 2, 2023', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('12h 01m02s am', '0001-01-01 00:01:02', '0001-01-01 00:01:02'),
        ('12h 2023-08-02', '2023-08-02 12:00:00', '2023-08-02 12:00:00'),
        ('12h on August 2, 2023', '2023-08-02 12:00:00', '2023-08-02 12:00:00'),
        ('12h01m 2023-08-02', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('12h01m on August 2, 2023', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('12h01m01s on August 2, 2023', '2023-08-02 12:01:01', '2023-08-02 12:01:01'),
        ('12h32m53', '0001-01-01 12:32:53', '0001-01-01 12:32:53'),
        ('12pm August 2, 2023', '2023-08-02 12:00:00', '2023-08-02 12:00:00'),
        ('13NOV2017', '2017-11-13 00:00:00', '2017-11-13 00:00:00'),
        ('1976-07-04T01:02:03Z', '1976-07-04 01:02:03', '1976-07-04 01:02:03+00:00'),
        ('19760704', '1976-07-04 00:00:00', '1976-07-04 00:00:00'),
        ('1986-07-05T08:15:30z', '1986-07-05 08:15:30', '1986-07-05 08:15:30+00:00'),
        ('1994-11-05T08:15:30-05:00', '1994-11-05 08:15:30', '1994-11-05 08:15:30-05:00'),
        ('1994-11-05T08:15:30Z', '1994-11-05 08:15:30', '1994-11-05 08:15:30+00:00'),
        ('1996.07.10 AD at 15:08:56', '1996-07-10 15:08:56', '1996-07-10 15:08:56'),
        ('1996.July.10 AD 12:08 PM', '1996-07-10 12:08:00', '1996-07-10 12:08:00'),
        ('199709020908', '1997-09-02 09:08:00', '1997-09-02 09:08:00'),
        ('19970902090807', '1997-09-02 09:08:07', '1997-09-02 09:08:07'),
        ('19990802T2359', '1999-08-02 23:59:00', '1999-08-02 23:59:00'),
        ('19990802T235959', '1999-08-02 23:59:59', '1999-08-02 23:59:59'),
        ('19990802T235959.123', '1999-08-02 23:59:59.123000', '1999-08-02 23:59:59.123000'),
        ('1:01 PM', '0001-01-01 13:01:00', '0001-01-01 13:01:00'),
        ('1:01:02', '0001-01-01 01:01:02', '0001-01-01 01:01:02'),
        ('1:01:02 on July 4, 1976', '1976-07-04 01:01:02', '1976-07-04 01:01:02'),
        ('2 08 2023', '2023-02-08 00:00:00', '2023-02-08 00:00:00'),
        ('2 08 2023 12:01', '2023-02-08 12:01:00', '2023-02-08 12:01:00'),
        ('2 08 2023 12:01:01', '2023-02-08 12:01:01', '2023-02-08 12:01:01'),
        ('2 8 2023', '2023-02-08 00:00:00', '2023-02-08 00:00:00'),
        ('2 8 2023 12:01', '2023-02-08 12:01:00', '2023-02-08 12:01:00'),
        ('2 8 2023 12:01:01', '2023-02-08 12:01:01', '2023-02-08 12:01:01'),
        ('2 Aug 2023 12:01:01 +0530', '2023-08-02 12:01:01', '2023-08-02 12:01:01+05:30'),
        ('2 Aug 2023 12:01:01 +05:30', '2023-08-02 12:01:01', '2023-08-02 12:01:01+05:30'),
        ('2 Aug 2023 12:01:01 -0500', '2023-08-02 12:01:01', '2023-08-02 12:01:01-05:00'),
        ('2 Aug 2023 12:01:01 -05:00', '2023-08-02 12:01:01', '2023-08-02 12:01:01-05:00'),
        ('2 Aug, 2023', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('2 Aug, 2023 01:01:01', '2023-08-02 01:01:01', '2023-08-02 01:01:01'),
        ('2 Aug, 2023 12:01 AM', '2023-08-02 00:01:00', '2023-08-02 00:01:00'),
        ('2 Aug, 2023 12:01 PM', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('2 Aug, 2023 12:01:01', '2023-08-02 12:01:01', '2023-08-02 12:01:01'),
        ('2 August 2023 12:01 PM', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('2 August 2023 at 12 AM', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('2 August 2023 at 12 PM', '2023-08-02 12:00:00', '2023-08-02 12:00:00'),
        ('2 August 2023 at 12:01 PM GMT', '2023-08-02 12:01:00', '2023-08-02 12:01:00+00:00'),
        ('2 August 2023, 12:01 PM', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('2 August, 2023', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('2 August, 2023 01:01:01', '2023-08-02 01:01:01', '2023-08-02 01:01:01'),
        ('2 August, 2023 12:01 AM', '2023-08-02 00:01:00', '2023-08-02 00:01:00'),
        ('2 August, 2023 12:01 PM', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('2 August, 2023 12:01:01', '2023-08-02 12:01:01', '2023-08-02 12:01:01'),
        ('2 Ağustos 2023 saat 12:01', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('2 agosto 2023 ore 12:01', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('2 de agosto de 2023', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('2 de agosto de 2023 a las 12:01', '0001-08-02 12:01:00', '0001-08-02 12:01:00'),
        ('2 Αυγούστου 2023, 12:01', '2023-02-01 12:01:00', '2023-02-01 12:01:00'),
        ('2 августа 2023 г. в 12:01', '2023-02-01 12:01:00', '2023-02-01 12:01:00'),
        ('2 अगस्त 2023, 12:01 अपराह्न', '2023-02-01 12:01:00', '2023-02-01 12:01:00'),
        ('2-Aug-2023 12:01', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('2-Aug-2023 12:01 AM', '2023-08-02 00:01:00', '2023-08-02 00:01:00'),
        ('2-Aug-2023 12:01 PM', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('2-Aug-23', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('2-August-2023 12:01', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('2-August-2023 12:01 AM', '2023-08-02 00:01:00', '2023-08-02 00:01:00'),
        ('2-August-2023 12:01 PM', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('2-August-23', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('2. August 2023', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('2. August 2023 um 12:01 Uhr', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('2.8.2023 12:01', '2023-02-08 12:01:00', '2023-02-08 12:01:00'),
        ('2/8/2023 12:01', '2023-02-08 12:01:00', '2023-02-08 12:01:00'),
        ('2003', '2003-01-01 00:00:00', '2003-01-01 00:00:00'),
        ('2003 09 25', '2003-09-25 00:00:00', '2003-09-25 00:00:00'),
        ('2003 Sep 25', '2003-09-25 00:00:00', '2003-09-25 00:00:00'),
        ('2003-09-25', '2003-09-25 00:00:00', '2003-09-25 00:00:00'),
        ('2003-09-25 10:49:41,502', '2003-09-25 10:49:41.502000', '2003-09-25 10:49:41.502000'),
        ('2003-09-25T10', '2003-09-25 10:00:00', '2003-09-25 10:00:00'),
        ('2003-09-25T10:49', '2003-09-25 10:49:00', '2003-09-25 10:49:00'),
        ('2003-09-25T10:49:41', '2003-09-25 10:49:41', '2003-09-25 10:49:41'),
        ('2003-09-25T10:49:41 -0300', '2003-09-25 10:49:41', '2003-09-25 10:49:41-03:00'),
        ('2003-09-25T10:49:41 -03:00', '2003-09-25 10:49:41', '2003-09-25 10:49:41-03:00'),
        ('2003-09-25T10:49:41-03:00', '2003-09-25 10:49:41', '2003-09-25 10:49:41-03:00'),
        ('2003-09-25T10:49:41.5-03:00', '2003-09-25 10:49:41.500000', '2003-09-25 10:49:41.500000-03:00'),
        ('2003-Sep-25', '2003-09-25 00:00:00', '2003-09-25 00:00:00'),
        ('2003.09.25', '2003-09-25 00:00:00', '2003-09-25 00:00:00'),
        ('2003.Sep.25', '2003-09-25 00:00:00', '2003-09-25 00:00:00'),
        ('2003/09/25', '2003-09-25 00:00:00', '2003-09-25 00:00:00'),
        ('2003/Sep/25', '2003-09-25 00:00:00', '2003-09-25 00:00:00'),
        ('20030925', '2003-09-25 00:00:00', '2003-09-25 00:00:00'),
        ('20030925T10', '2003-09-25 10:00:00', '2003-09-25 10:00:00'),
        ('20030925T1049', '2003-09-25 10:49:00', '2003-09-25 10:49:00'),
        ('20030925T104941', '2003-09-25 10:49:41', '2003-09-25 10:49:41'),
        ('20030925T104941-0300', '2003-09-25 10:49:41', '2003-09-25 10:49:41-03:00'),
        ('20030925T104941.5-0300', '2003-09-25 10:49:41.500000', '2003-09-25 10:49:41.500000-03:00'),
        ('2004 10 Apr 11h30m', '2004-04-10 11:30:00', '2004-04-10 11:30:00'),
        ('20080227T21:26:01.123456789', '2008-02-27 21:26:01.123456', '2008-02-27 21:26:01.123456'),
        ('2014 January 19', '2014-01-19 00:00:00', '2014-01-19 00:00:00'),
        ('2014 January 19 09:00 UTC', '2014-01-19 09:00:00', '2014-01-19 09:00:00+00:00'),
        ('2014-05-01 08:01:01', '2014-05-01 08:01:01', '2014-05-01 08:01:01'),
        ('2015 09 25', '2015-09-25 00:00:00', '2015-09-25 00:00:00'),
        ('2015-15-May', '2015-05-15 00:00:00', '2015-05-15 00:00:00'),
        ('2016-12-21 04.2h', '2016-12-21 04:12:00', '2016-12-21 04:12:00'),
        ('2017-02-03 12:40 BRST', '2017-02-03 12:40:00', '2017-02-03 12:40:00'),
        ('2017-07-17 06:15:', '2017-07-17 06:15:00', '2017-07-17 06:15:00'),
        ('2023 08 02 12', '2023-08-02 12:00:00', '2023-08-02 12:00:00'),
        ('2023 08 02 1201', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('2023 08 02 120101', '2023-08-02 12:01:01', '2023-08-02 12:01:01'),
        ('2023 08 02 12:01', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('2023 08 02 12:01:01', '2023-08-02 12:01:01', '2023-08-02 12:01:01'),
        ('2023 Aug 02', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('2023 Aug-02', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('2023 August 2st 12:01 AM', '2023-08-02 00:01:00', '2023-08-02 00:01:00'),
        ('2023 August 2st 12:01 PM', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('2023 August-02', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('2023-08-02', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('2023-08-02 01:01', '2023-08-02 01:01:00', '2023-08-02 01:01:00'),
        ('2023-08-02 01:01 AM', '2023-08-02 01:01:00', '2023-08-02 01:01:00'),
        ('2023-08-02 01:01 PM', '2023-08-02 13:01:00', '2023-08-02 13:01:00'),
        ('2023-08-02 01:01:01', '2023-08-02 01:01:01', '2023-08-02 01:01:01'),
        ('2023-08-02 01:01:01 AM', '2023-08-02 01:01:01', '2023-08-02 01:01:01'),
        ('2023-08-02 01:01:01 PM', '2023-08-02 13:01:01', '2023-08-02 13:01:01'),
        ('2023-08-02 01:01:01 GMT', '2023-08-02 01:01:01', '2023-08-02 01:01:01+00:00'),
        ('2023-08-02 01:01:01 UTC', '2023-08-02 01:01:01', '2023-08-02 01:01:01+00:00'),
        ('2023-08-02 01:01:01+01:01', '2023-08-02 01:01:01', '2023-08-02 01:01:01+01:01'),
        ('2023-08-02 01:01:01+01:01 AM', '2023-08-02 01:01:01', '2023-08-02 01:01:01+01:01'),
        ('2023-08-02 01:01:01+01:01 PM', '2023-08-02 13:01:01', '2023-08-02 13:01:01+01:01'),
        ('2023-08-02 01:01:01-01:01', '2023-08-02 01:01:01', '2023-08-02 01:01:01-01:01'),
        ('2023-08-02 01:01:01-01:01 AM', '2023-08-02 01:01:01', '2023-08-02 01:01:01-01:01'),
        ('2023-08-02 01:01:01-01:01 PM', '2023-08-02 13:01:01', '2023-08-02 13:01:01-01:01'),
        ('2023-08-02 01:01:01.001001', '2023-08-02 01:01:01.001001', '2023-08-02 01:01:01.001001'),
        ('2023-08-02 01:01:01.001001+01:01', '2023-08-02 01:01:01.001001', '2023-08-02 01:01:01.001001+01:01'),
        ('2023-08-02 01:01:01.001001-01:01', '2023-08-02 01:01:01.001001', '2023-08-02 01:01:01.001001-01:01'),
        ('2023-08-02 01:01:01.001001Z', '2023-08-02 01:01:01.001001', '2023-08-02 01:01:01.001001+00:00'),
        ('2023-08-02 01:01:01.001Z', '2023-08-02 01:01:01.001000', '2023-08-02 01:01:01.001000+00:00'),
        ('2023-08-02 01:01:01.001Z AM', '2023-08-02 01:01:01.001000', '2023-08-02 01:01:01.001000+00:00'),
        ('2023-08-02 01:01:01.001Z PM', '2023-08-02 13:01:01.001000', '2023-08-02 13:01:01.001000+00:00'),
        ('2023-08-02 1 AM', '2023-08-02 01:00:00', '2023-08-02 01:00:00'),
        ('2023-08-02 1 PM', '2023-08-02 13:00:00', '2023-08-02 13:00:00'),
        ('2023-08-02 12', '2023-08-02 12:00:00', '2023-08-02 12:00:00'),
        ('2023-08-02 12 A.M.', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('2023-08-02 12 P.M.', '2023-08-02 12:00:00', '2023-08-02 12:00:00'),
        ('2023-08-02 12 PM', '2023-08-02 12:00:00', '2023-08-02 12:00:00'),
        ('2023-08-02 12 am', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ("2023-08-02 12 o'clock AM", '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ("2023-08-02 12 o'clock PM", '2023-08-02 12:00:00', '2023-08-02 12:00:00'),
        ('2023-08-02 12+01:01', '2023-08-02 12:00:00', '2023-08-02 12:00:00+01:01'),
        ('2023-08-02 12+05:30', '2023-08-02 12:00:00', '2023-08-02 12:00:00+05:30'),
        ('2023-08-02 12-01:01', '2023-08-02 12:00:00', '2023-08-02 12:00:00-01:01'),
        ('2023-08-02 12-05:30', '2023-08-02 12:00:00', '2023-08-02 12:00:00-05:30'),
        ('2023-08-02 1201+01:01', '2023-08-02 12:01:00', '2023-08-02 12:01:00+01:01'),
        ('2023-08-02 1201+05:30', '2023-08-02 12:01:00', '2023-08-02 12:01:00+05:30'),
        ('2023-08-02 1201-01:01', '2023-08-02 12:01:00', '2023-08-02 12:01:00-01:01'),
        ('2023-08-02 1201-05:30', '2023-08-02 12:01:00', '2023-08-02 12:01:00-05:30'),
        ('2023-08-02 120101+01:01', '2023-08-02 12:01:01', '2023-08-02 12:01:01+01:01'),
        ('2023-08-02 120101+05:30', '2023-08-02 12:01:01', '2023-08-02 12:01:01+05:30'),
        ('2023-08-02 120101-01:01', '2023-08-02 12:01:01', '2023-08-02 12:01:01-01:01'),
        ('2023-08-02 120101-05:30', '2023-08-02 12:01:01', '2023-08-02 12:01:01-05:30'),
        ('2023-08-02 120101Z', '2023-08-02 12:01:01', '2023-08-02 12:01:01+00:00'),
        ('2023-08-02 1201Z', '2023-08-02 12:01:00', '2023-08-02 12:01:00+00:00'),
        ('2023-08-02 12:01', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('2023-08-02 12:01 AM', '2023-08-02 00:01:00', '2023-08-02 00:01:00'),
        ('2023-08-02 12:01 AM GMT', '2023-08-02 00:01:00', '2023-08-02 00:01:00+00:00'),
        ('2023-08-02 12:01 PM', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('2023-08-02 12:01 PM +0000', '2023-08-02 12:01:00', '2023-08-02 12:01:00+00:00'),
        ('2023-08-02 12:01 PM -0500', '2023-08-02 12:01:00', '2023-08-02 12:01:00-05:00'),
        ('2023-08-02 12:01 PM GMT', '2023-08-02 12:01:00', '2023-08-02 12:01:00+00:00'),
        ('2023-08-02 12:01 PM UTC', '2023-08-02 12:01:00', '2023-08-02 12:01:00+00:00'),
        ('2023-08-02 12:01:01Z', '2023-08-02 12:01:01', '2023-08-02 12:01:01+00:00'),
        ('2023-08-02 12:01:01', '2023-08-02 12:01:01', '2023-08-02 12:01:01'),
        ('2023-08-02 12:01:01 -0300 (BRST)', '2023-08-02 12:01:01', '2023-08-02 12:01:01-03:00'),
        ('2023-08-02 12:01:01 123456789', '2023-08-02 12:01:01', '2023-08-02 12:01:01'),
        ('2023-08-02 12:01:01 123456789Z', '2023-08-02 12:01:01', '2023-08-02 12:01:01+00:00'),
        ('2023-08-02 12:01:01 AKDT', '2023-08-02 12:01:01', '2023-08-02 12:01:01-08:00'),
        ('2023-08-02 12:01:01 AKST', '2023-08-02 12:01:01', '2023-08-02 12:01:01-09:00'),
        ('2023-08-02 12:01:01 AM', '2023-08-02 00:01:01', '2023-08-02 00:01:01'),
        ('2023-08-02 12:01:01 AM GMT', '2023-08-02 00:01:01', '2023-08-02 00:01:01+00:00'),
        ('2023-08-02 12:01:01 CDT', '2023-08-02 12:01:01', '2023-08-02 12:01:01-05:00'),
        ('2023-08-02 12:01:01 EDT', '2023-08-02 12:01:01', '2023-08-02 12:01:01-04:00'),
        ('2023-08-02 12:01:01 EST', '2023-08-02 12:01:01', '2023-08-02 12:01:01-05:00'),
        ('2023-08-02 12:01:01 GMT', '2023-08-02 12:01:01', '2023-08-02 12:01:01+00:00'),
        ('2023-08-02 12:01:01 GMT-2', '2023-08-02 12:01:01', '2023-08-02 12:01:01+02:00'),
        ('2023-08-02 12:01:01 HST', '2023-08-02 12:01:01', '2023-08-02 12:01:01-10:00'),
        ('2023-08-02 12:01:01 MDT', '2023-08-02 12:01:01', '2023-08-02 12:01:01-06:00'),
        ('2023-08-02 12:01:01 MST', '2023-08-02 12:01:01', '2023-08-02 12:01:01-07:00'),
        ('2023-08-02 12:01:01 PDT', '2023-08-02 12:01:01', '2023-08-02 12:01:01-07:00'),
        ('2023-08-02 12:01:01 PM', '2023-08-02 12:01:01', '2023-08-02 12:01:01'),
        ('2023-08-02 12:01:01 PM GMT', '2023-08-02 12:01:01', '2023-08-02 12:01:01+00:00'),
        ('2023-08-02 12:01:01 PST', '2023-08-02 12:01:01', '2023-08-02 12:01:01-08:00'),
        ('2023-08-02 12:01:01 UTC', '2023-08-02 12:01:01', '2023-08-02 12:01:01+00:00'),
        ('2023-08-02 12:01:01 UTC+3:12', '2023-08-02 12:01:01', '2023-08-02 12:01:01-03:12'),
        ('2023-08-02 12:01:01 UTC-0312', '2023-08-02 12:01:01', '2023-08-02 12:01:01+03:12'),
        ('2023-08-02 12:01:01+01:01', '2023-08-02 12:01:01', '2023-08-02 12:01:01+01:01'),
        ('2023-08-02 12:01:01+01:01 AM', '2023-08-02 00:01:01', '2023-08-02 00:01:01+01:01'),
        ('2023-08-02 12:01:01+01:01 PM', '2023-08-02 12:01:01', '2023-08-02 12:01:01+01:01'),
        ('2023-08-02 12:01:01,123', '2023-08-02 12:01:01.123000', '2023-08-02 12:01:01.123000'),
        ('2023-08-02 12:01:01,123456', '2023-08-02 12:01:01.123456', '2023-08-02 12:01:01.123456'),
        ('2023-08-02 12:01:01,123456789', '2023-08-02 12:01:01.123456', '2023-08-02 12:01:01.123456'),
        ('2023-08-02 12:01:01,123456789+01:01', '2023-08-02 12:01:01.123456', '2023-08-02 12:01:01.123456+01:01'),
        ('2023-08-02 12:01:01,123456789+05:30', '2023-08-02 12:01:01.123456', '2023-08-02 12:01:01.123456+05:30'),
        ('2023-08-02 12:01:01,123456789-01:01', '2023-08-02 12:01:01.123456', '2023-08-02 12:01:01.123456-01:01'),
        ('2023-08-02 12:01:01,123456789-05:30', '2023-08-02 12:01:01.123456', '2023-08-02 12:01:01.123456-05:30'),
        ('2023-08-02 12:01:01,123456789Z', '2023-08-02 12:01:01.123456', '2023-08-02 12:01:01.123456+00:00'),
        ('2023-08-02 12:01:01-01:01', '2023-08-02 12:01:01', '2023-08-02 12:01:01-01:01'),
        ('2023-08-02 12:01:01-01:01 AM', '2023-08-02 00:01:01', '2023-08-02 00:01:01-01:01'),
        ('2023-08-02 12:01:01-01:01 PM', '2023-08-02 12:01:01', '2023-08-02 12:01:01-01:01'),
        ('2023-08-02 12:01:01.001001', '2023-08-02 12:01:01.001001', '2023-08-02 12:01:01.001001'),
        ('2023-08-02 12:01:01.001001+01:01', '2023-08-02 12:01:01.001001', '2023-08-02 12:01:01.001001+01:01'),
        ('2023-08-02 12:01:01.001001-01:01', '2023-08-02 12:01:01.001001', '2023-08-02 12:01:01.001001-01:01'),
        ('2023-08-02 12:01:01.001001-12:01', '2023-08-02 12:01:01.001001', '2023-08-02 12:01:01.001001-12:01'),
        ('2023-08-02 12:01:01.001001000', '2023-08-02 12:01:01.001001', '2023-08-02 12:01:01.001001'),
        ('2023-08-02 12:01:01.001001000+01:01', '2023-08-02 12:01:01.001001', '2023-08-02 12:01:01.001001+01:01'),
        ('2023-08-02 12:01:01.001001000+0530', '2023-08-02 12:01:01.001001', '2023-08-02 12:01:01.001001+05:30'),
        ('2023-08-02 12:01:01.001001000+05:30', '2023-08-02 12:01:01.001001', '2023-08-02 12:01:01.001001+05:30'),
        ('2023-08-02 12:01:01.001001000-01:01', '2023-08-02 12:01:01.001001', '2023-08-02 12:01:01.001001-01:01'),
        ('2023-08-02 12:01:01.001001000-0530', '2023-08-02 12:01:01.001001', '2023-08-02 12:01:01.001001-05:30'),
        ('2023-08-02 12:01:01.001001000-05:30', '2023-08-02 12:01:01.001001', '2023-08-02 12:01:01.001001-05:30'),
        ('2023-08-02 12:01:01.001001000000', '2023-08-02 12:01:01.001001', '2023-08-02 12:01:01.001001'),
        ('2023-08-02 12:01:01.001001000000+01:01', '2023-08-02 12:01:01.001001', '2023-08-02 12:01:01.001001+01:01'),
        ('2023-08-02 12:01:01.001001000000+0530', '2023-08-02 12:01:01.001001', '2023-08-02 12:01:01.001001+05:30'),
        ('2023-08-02 12:01:01.001001000000+05:30', '2023-08-02 12:01:01.001001', '2023-08-02 12:01:01.001001+05:30'),
        ('2023-08-02 12:01:01.001001000000-01:01', '2023-08-02 12:01:01.001001', '2023-08-02 12:01:01.001001-01:01'),
        ('2023-08-02 12:01:01.001001000000-0530', '2023-08-02 12:01:01.001001', '2023-08-02 12:01:01.001001-05:30'),
        ('2023-08-02 12:01:01.001001000000-05:30', '2023-08-02 12:01:01.001001', '2023-08-02 12:01:01.001001-05:30'),
        ('2023-08-02 12:01:01.001001000000Z', '2023-08-02 12:01:01.001001', '2023-08-02 12:01:01.001001+00:00'),
        ('2023-08-02 12:01:01.001001000Z', '2023-08-02 12:01:01.001001', '2023-08-02 12:01:01.001001+00:00'),
        ('2023-08-02 12:01:01.001001Z', '2023-08-02 12:01:01.001001', '2023-08-02 12:01:01.001001+00:00'),
        ('2023-08-02 12:01:01.001Z', '2023-08-02 12:01:01.001000', '2023-08-02 12:01:01.001000+00:00'),
        ('2023-08-02 12:01:01.001Z AM', '2023-08-02 00:01:01.001000', '2023-08-02 00:01:01.001000+00:00'),
        ('2023-08-02 12:01:01.001Z PM', '2023-08-02 12:01:01.001000', '2023-08-02 12:01:01.001000+00:00'),
        ('2023-08-02 12:01:01.123,456,789', '2023-08-02 12:01:01.123000', '2023-08-02 12:01:01.123000'),
        ('2023-08-02 12:01:01.123456', '2023-08-02 12:01:01.123456', '2023-08-02 12:01:01.123456'),
        ('2023-08-02 12:01:01.123456+01:01', '2023-08-02 12:01:01.123456', '2023-08-02 12:01:01.123456+01:01'),
        ('2023-08-02 12:01:01.123456+05:30', '2023-08-02 12:01:01.123456', '2023-08-02 12:01:01.123456+05:30'),
        ('2023-08-02 12:01:01.123456-01:01', '2023-08-02 12:01:01.123456', '2023-08-02 12:01:01.123456-01:01'),
        ('2023-08-02 12:01:01.123456-05:30', '2023-08-02 12:01:01.123456', '2023-08-02 12:01:01.123456-05:30'),
        ('2023-08-02 12:01:01.123456789', '2023-08-02 12:01:01.123456', '2023-08-02 12:01:01.123456'),
        ('2023-08-02 12:01:01.123456789+01:01', '2023-08-02 12:01:01.123456', '2023-08-02 12:01:01.123456+01:01'),
        ('2023-08-02 12:01:01.123456789+05:30', '2023-08-02 12:01:01.123456', '2023-08-02 12:01:01.123456+05:30'),
        ('2023-08-02 12:01:01.123456789-01:01', '2023-08-02 12:01:01.123456', '2023-08-02 12:01:01.123456-01:01'),
        ('2023-08-02 12:01:01.123456789-05:30', '2023-08-02 12:01:01.123456', '2023-08-02 12:01:01.123456-05:30'),
        ('2023-08-02 12:01:01.123456789123', '2023-08-02 12:01:01.123456', '2023-08-02 12:01:01.123456'),
        ('2023-08-02 12:01:01.123456789123+05:30', '2023-08-02 12:01:01.123456', '2023-08-02 12:01:01.123456+05:30'),
        ('2023-08-02 12:01:01.123456789123456', '2023-08-02 12:01:01.123456', '2023-08-02 12:01:01.123456'),
        ('2023-08-02 12:01:01.123456789123456+01:01', '2023-08-02 12:01:01.123456', '2023-08-02 12:01:01.123456+01:01'),
        ('2023-08-02 12:01:01.123456789123456+0530', '2023-08-02 12:01:01.123456', '2023-08-02 12:01:01.123456+05:30'),
        ('2023-08-02 12:01:01.123456789123456+05:30', '2023-08-02 12:01:01.123456', '2023-08-02 12:01:01.123456+05:30'),
        ('2023-08-02 12:01:01.123456789123456-01:01', '2023-08-02 12:01:01.123456', '2023-08-02 12:01:01.123456-01:01'),
        ('2023-08-02 12:01:01.123456789123456-0530', '2023-08-02 12:01:01.123456', '2023-08-02 12:01:01.123456-05:30'),
        ('2023-08-02 12:01:01.123456789123456-05:30', '2023-08-02 12:01:01.123456', '2023-08-02 12:01:01.123456-05:30'),
        ('2023-08-02 12:01:01.123456789123456Z', '2023-08-02 12:01:01.123456', '2023-08-02 12:01:01.123456+00:00'),
        ('2023-08-02 12:01:01.123456789Z', '2023-08-02 12:01:01.123456', '2023-08-02 12:01:01.123456+00:00'),
        ('2023-08-02 12:01:01.123456Z', '2023-08-02 12:01:01.123456', '2023-08-02 12:01:01.123456+00:00'),
        ('2023-08-02 12Z', '2023-08-02 12:00:00', '2023-08-02 12:00:00+00:00'),
        ('2023-08-02 12a.m.', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('2023-08-02 12h', '2023-08-02 12:00:00', '2023-08-02 12:00:00'),
        ('2023-08-02 12h01m', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('2023-08-02 12h01m01s', '2023-08-02 12:01:01', '2023-08-02 12:01:01'),
        ('2023-08-02 12p.m.', '2023-08-02 12:00:00', '2023-08-02 12:00:00'),
        ('2023-08-02 at 01:01', '2023-08-02 01:01:00', '2023-08-02 01:01:00'),
        ('2023-08-02 at 12 AM', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('2023-08-02 at 12 PM', '2023-08-02 12:00:00', '2023-08-02 12:00:00'),
        ('2023-08-02 at 12:01', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('2023-08-02 sun.', '2023-08-06 00:00:00', '2023-08-06 00:00:00'),
        ('2023-08-02 sat.', '2023-08-05 00:00:00', '2023-08-05 00:00:00'),
        ('2023-08-02T01:01 AM', '2023-08-02 01:01:00', '2023-08-02 01:01:00'),
        ('2023-08-02T01:01 PM', '2023-08-02 13:01:00', '2023-08-02 13:01:00'),
        ('2023-08-02T01:01:01', '2023-08-02 01:01:01', '2023-08-02 01:01:01'),
        ('2023-08-02T01:01:01 AM', '2023-08-02 01:01:01', '2023-08-02 01:01:01'),
        ('2023-08-02T01:01:01 PM', '2023-08-02 13:01:01', '2023-08-02 13:01:01'),
        ('2023-08-02T01:01:01+01:01', '2023-08-02 01:01:01', '2023-08-02 01:01:01+01:01'),
        ('2023-08-02T01:01:01-01:01', '2023-08-02 01:01:01', '2023-08-02 01:01:01-01:01'),
        ('2023-08-02T01:01:01.001001', '2023-08-02 01:01:01.001001', '2023-08-02 01:01:01.001001'),
        ('2023-08-02T01:01:01.001001+01:01', '2023-08-02 01:01:01.001001', '2023-08-02 01:01:01.001001+01:01'),
        ('2023-08-02T01:01:01.001001-01:01', '2023-08-02 01:01:01.001001', '2023-08-02 01:01:01.001001-01:01'),
        ('2023-08-02T01:01:01.001001Z', '2023-08-02 01:01:01.001001', '2023-08-02 01:01:01.001001+00:00'),
        ('2023-08-02T01:01:01.001Z', '2023-08-02 01:01:01.001000', '2023-08-02 01:01:01.001000+00:00'),
        ('2023-08-02T12', '2023-08-02 12:00:00', '2023-08-02 12:00:00'),
        ('2023-08-02T12+01:01', '2023-08-02 12:00:00', '2023-08-02 12:00:00+01:01'),
        ('2023-08-02T12+05:30', '2023-08-02 12:00:00', '2023-08-02 12:00:00+05:30'),
        ('2023-08-02T12-01:01', '2023-08-02 12:00:00', '2023-08-02 12:00:00-01:01'),
        ('2023-08-02T12-05:30', '2023-08-02 12:00:00', '2023-08-02 12:00:00-05:30'),
        ('2023-08-02T1201+01:01', '2023-08-02 12:01:00', '2023-08-02 12:01:00+01:01'),
        ('2023-08-02T1201+05:30', '2023-08-02 12:01:00', '2023-08-02 12:01:00+05:30'),
        ('2023-08-02T1201-01:01', '2023-08-02 12:01:00', '2023-08-02 12:01:00-01:01'),
        ('2023-08-02T1201-05:30', '2023-08-02 12:01:00', '2023-08-02 12:01:00-05:30'),
        ('2023-08-02T120101+01:01', '2023-08-02 12:01:01', '2023-08-02 12:01:01+01:01'),
        ('2023-08-02T120101+05:30', '2023-08-02 12:01:01', '2023-08-02 12:01:01+05:30'),
        ('2023-08-02T120101-01:01', '2023-08-02 12:01:01', '2023-08-02 12:01:01-01:01'),
        ('2023-08-02T120101-05:30', '2023-08-02 12:01:01', '2023-08-02 12:01:01-05:30'),
        ('2023-08-02T120101Z', '2023-08-02 12:01:01', '2023-08-02 12:01:01+00:00'),
        ('2023-08-02T1201Z', '2023-08-02 12:01:00', '2023-08-02 12:01:00+00:00'),
        ('2023-08-02T12:01', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('2023-08-02T12:01 AM', '2023-08-02 00:01:00', '2023-08-02 00:01:00'),
        ('2023-08-02T12:01 PM', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('2023-08-02T12:01:00Z', '2023-08-02 12:01:00', '2023-08-02 12:01:00+00:00'),
        ('2023-08-02T12:01:01', '2023-08-02 12:01:01', '2023-08-02 12:01:01'),
        ('2023-08-02T12:01:01 AM', '2023-08-02 00:01:01', '2023-08-02 00:01:01'),
        ('2023-08-02T12:01:01 PM', '2023-08-02 12:01:01', '2023-08-02 12:01:01'),
        ('2023-08-02T12:01:01+0000', '2023-08-02 12:01:01', '2023-08-02 12:01:01+00:00'),
        ('2023-08-02T12:01:01+01:01', '2023-08-02 12:01:01', '2023-08-02 12:01:01+01:01'),
        ('2023-08-02T12:01:01+0530', '2023-08-02 12:01:01', '2023-08-02 12:01:01+05:30'),
        ('2023-08-02T12:01:01+05:30', '2023-08-02 12:01:01', '2023-08-02 12:01:01+05:30'),
        ('2023-08-02T12:01:01,123456789Z', '2023-08-02 12:01:01.123456', '2023-08-02 12:01:01.123456+00:00'),
        ('2023-08-02T12:01:01-01:01', '2023-08-02 12:01:01', '2023-08-02 12:01:01-01:01'),
        ('2023-08-02T12:01:01-0530', '2023-08-02 12:01:01', '2023-08-02 12:01:01-05:30'),
        ('2023-08-02T12:01:01-05:30', '2023-08-02 12:01:01', '2023-08-02 12:01:01-05:30'),
        ('2023-08-02T12:01:01.001+0530', '2023-08-02 12:01:01.001000', '2023-08-02 12:01:01.001000+05:30'),
        ('2023-08-02T12:01:01.001+05:30', '2023-08-02 12:01:01.001000', '2023-08-02 12:01:01.001000+05:30'),
        ('2023-08-02T12:01:01.001-0530', '2023-08-02 12:01:01.001000', '2023-08-02 12:01:01.001000-05:30'),
        ('2023-08-02T12:01:01.001-05:30', '2023-08-02 12:01:01.001000', '2023-08-02 12:01:01.001000-05:30'),
        ('2023-08-02T12:01:01.001001', '2023-08-02 12:01:01.001001', '2023-08-02 12:01:01.001001'),
        ('2023-08-02T12:01:01.001001+01:01', '2023-08-02 12:01:01.001001', '2023-08-02 12:01:01.001001+01:01'),
        ('2023-08-02T12:01:01.001001+05:30', '2023-08-02 12:01:01.001001', '2023-08-02 12:01:01.001001+05:30'),
        ('2023-08-02T12:01:01.001001-01:01', '2023-08-02 12:01:01.001001', '2023-08-02 12:01:01.001001-01:01'),
        ('2023-08-02T12:01:01.001001-05:30', '2023-08-02 12:01:01.001001', '2023-08-02 12:01:01.001001-05:30'),
        ('2023-08-02T12:01:01.001001Z', '2023-08-02 12:01:01.001001', '2023-08-02 12:01:01.001001+00:00'),
        ('2023-08-02T12:01:01.001Z', '2023-08-02 12:01:01.001000', '2023-08-02 12:01:01.001000+00:00'),
        ('2023-08-02T12:01:01.123456+01:01', '2023-08-02 12:01:01.123456', '2023-08-02 12:01:01.123456+01:01'),
        ('2023-08-02T12:01:01.123456+05:30', '2023-08-02 12:01:01.123456', '2023-08-02 12:01:01.123456+05:30'),
        ('2023-08-02T12:01:01.123456-01:01', '2023-08-02 12:01:01.123456', '2023-08-02 12:01:01.123456-01:01'),
        ('2023-08-02T12:01:01.123456-05:30', '2023-08-02 12:01:01.123456', '2023-08-02 12:01:01.123456-05:30'),
        ('2023-08-02T12:01:01.123456789+01:01', '2023-08-02 12:01:01.123456', '2023-08-02 12:01:01.123456+01:01'),
        ('2023-08-02T12:01:01.123456789+05:30', '2023-08-02 12:01:01.123456', '2023-08-02 12:01:01.123456+05:30'),
        ('2023-08-02T12:01:01.123456789-01:01', '2023-08-02 12:01:01.123456', '2023-08-02 12:01:01.123456-01:01'),
        ('2023-08-02T12:01:01.123456789-05:30', '2023-08-02 12:01:01.123456', '2023-08-02 12:01:01.123456-05:30'),
        ('2023-08-02T12:01:01.123456789Z', '2023-08-02 12:01:01.123456', '2023-08-02 12:01:01.123456+00:00'),
        ('2023-08-02T12:01:01.123456Z', '2023-08-02 12:01:01.123456', '2023-08-02 12:01:01.123456+00:00'),
        ('2023-08-02T12:01Z', '2023-08-02 12:01:00', '2023-08-02 12:01:00+00:00'),
        ('2023-08-02T12Z', '2023-08-02 12:00:00', '2023-08-02 12:00:00+00:00'),
        ('2023-12-31 11:59 AM', '2023-12-31 11:59:00', '2023-12-31 11:59:00'),
        ('2023-12-31 11:59 PM', '2023-12-31 23:59:00', '2023-12-31 23:59:00'),
        ('2023-12-31 11:59 am', '2023-12-31 11:59:00', '2023-12-31 11:59:00'),
        ('2023-12-31 11:59 pm', '2023-12-31 23:59:00', '2023-12-31 23:59:00'),
        ('2023-12-31 23:59', '2023-12-31 23:59:00', '2023-12-31 23:59:00'),
        ('2023-214', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('2023-214 12:01:01.001', '2023-08-02 12:01:01.001000', '2023-08-02 12:01:01.001000'),
        ('2023-Aug 02', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('2023-Aug-02', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('2023-Aug-02 12:01', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('2023-Aug-02 12:01:01', '2023-08-02 12:01:01', '2023-08-02 12:01:01'),
        ('2023-Aug-2', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('2023-Aug-2 12:01', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('2023-Aug-2 12:01:01', '2023-08-02 12:01:01', '2023-08-02 12:01:01'),
        ('2023-August-02', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('2023-August-02 12:01', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('2023-August-02 12:01:01', '2023-08-02 12:01:01', '2023-08-02 12:01:01'),
        ('2023-August-2', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('2023-August-2 12:01', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('2023-August-2 12:01:01', '2023-08-02 12:01:01', '2023-08-02 12:01:01'),
        ('2023-W31-3', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('2023-W31-3T12:01:01.001', '2023-08-02 12:01:01.001000', '2023-08-02 12:01:01.001000'),
        ('2023.02.08 22:01 PM', '2023-02-08 22:01:00', '2023-02-08 22:01:00'),
        ('2023.08.02', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('2023.08.02 12', '2023-08-02 12:00:00', '2023-08-02 12:00:00'),
        ('2023.08.02 1201', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('2023.08.02 120101', '2023-08-02 12:01:01', '2023-08-02 12:01:01'),
        ('2023.08.02 12:01', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('2023.08.02 12:01 AM', '2023-08-02 00:01:00', '2023-08-02 00:01:00'),
        ('2023.08.02 12:01 PM', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('2023.08.02 12:01:01', '2023-08-02 12:01:01', '2023-08-02 12:01:01'),
        ('2023.08.02.12', '2023-08-02 12:00:00', '2023-08-02 12:00:00'),
        ('2023.08.02.1201', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('2023.08.02.120101', '2023-08-02 12:01:01', '2023-08-02 12:01:01'),
        ('2023/08/02', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('2023/08/02 01:01 AM', '2023-08-02 01:01:00', '2023-08-02 01:01:00'),
        ('2023/08/02 01:01 PM', '2023-08-02 13:01:00', '2023-08-02 13:01:00'),
        ('2023/08/02 01:01:01 AM', '2023-08-02 01:01:01', '2023-08-02 01:01:01'),
        ('2023/08/02 01:01:01 PM', '2023-08-02 13:01:01', '2023-08-02 13:01:01'),
        ('2023/08/02 12:01', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('2023/08/02 12:01 AM', '2023-08-02 00:01:00', '2023-08-02 00:01:00'),
        ('2023/08/02 12:01 PM', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('2023/08/02 12:01:01', '2023-08-02 12:01:01', '2023-08-02 12:01:01'),
        ('2023/08/02 12:01:01 AM', '2023-08-02 00:01:01', '2023-08-02 00:01:01'),
        ('2023/08/02 12:01:01 PM', '2023-08-02 12:01:01', '2023-08-02 12:01:01'),
        ('2023/08/02 12:01:01,123456789', '2023-08-02 12:01:01.123456', '2023-08-02 12:01:01.123456'),
        ('2023/08/02 12:01:01,123456789+01:01', '2023-08-02 12:01:01.123456', '2023-08-02 12:01:01.123456+01:01'),
        ('2023/08/02 12:01:01,123456789Z', '2023-08-02 12:01:01.123456', '2023-08-02 12:01:01.123456+00:00'),
        ('2023/08/02 at 12:01 AM', '2023-08-02 00:01:00', '2023-08-02 00:01:00'),
        ('2023/08/02 at 12:01 PM', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('20230802', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('20230802 12', '2023-08-02 12:00:00', '2023-08-02 12:00:00'),
        ('20230802 1201', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('20230802 120101', '2023-08-02 12:01:01', '2023-08-02 12:01:01'),
        ('2023080212', '2023-08-02 12:00:00', '2023-08-02 12:00:00'),
        ('202308021201', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('20230802120101', '2023-08-02 12:01:01', '2023-08-02 12:01:01'),
        ('20230802120101+0000', '2023-08-02 12:01:01', '2023-08-02 12:01:01+00:00'),
        ('20230802120101Z', '2023-08-02 12:01:01', '2023-08-02 12:01:01+00:00'),
        ('20230802T12', '2023-08-02 12:00:00', '2023-08-02 12:00:00'),
        ('20230802T1201', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('20230802T120101', '2023-08-02 12:01:01', '2023-08-02 12:01:01'),
        ('20230802T120101+0000', '2023-08-02 12:01:01', '2023-08-02 12:01:01+00:00'),
        ('20230802T120101.001', '2023-08-02 12:01:01.001000', '2023-08-02 12:01:01.001000'),
        ('20230802T120101.001001', '2023-08-02 12:01:01.001001', '2023-08-02 12:01:01.001001'),
        ('20230802T120101.001001000', '2023-08-02 12:01:01.001001', '2023-08-02 12:01:01.001001'),
        ('20230802T120101.001001000+01:01', '2023-08-02 12:01:01.001001', '2023-08-02 12:01:01.001001+01:01'),
        ('20230802T120101.001001000+05:30', '2023-08-02 12:01:01.001001', '2023-08-02 12:01:01.001001+05:30'),
        ('20230802T120101.001001000-01:01', '2023-08-02 12:01:01.001001', '2023-08-02 12:01:01.001001-01:01'),
        ('20230802T120101.001001000-05:30', '2023-08-02 12:01:01.001001', '2023-08-02 12:01:01.001001-05:30'),
        ('20230802T120101.001001000Z', '2023-08-02 12:01:01.001001', '2023-08-02 12:01:01.001001+00:00'),
        ('20230802T120101Z', '2023-08-02 12:01:01', '2023-08-02 12:01:01+00:00'),
        ('2023年08月02', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('2023年08月02日', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('2023年08月02日 12时 上午', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('2023年08月02日 12时 下午', '2023-08-02 12:00:00', '2023-08-02 12:00:00'),
        ('2023年08月02日 12时01分01秒', '2023-08-02 12:01:01', '2023-08-02 12:01:01'),
        ('2023年08月02日12时01分01秒', '2023-08-02 12:01:01', '2023-08-02 12:01:01'),
        ('2023年8月2日', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('2023年8月2日 12时01分01秒', '2023-08-02 12:01:01', '2023-08-02 12:01:01'),
        ('2023年8月2日 12点 上午', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('2023年8月2日 12点 下午', '2023-08-02 12:00:00', '2023-08-02 12:00:00'),
        ('2023年8月2日12时', '2023-08-02 12:00:00', '2023-08-02 12:00:00'),
        ('2023年8月2日12时01分01秒', '2023-08-02 12:01:01', '2023-08-02 12:01:01'),
        ('2023年8月2日12时01分01秒 GMT', '2023-08-02 12:01:01', '2023-08-02 12:01:01+00:00'),
        ('2024-02-29 12:01:01', '2024-02-29 12:01:01', '2024-02-29 12:01:01'),
        ('23-08-02', '2002-08-23 00:00:00', '2002-08-23 00:00:00'),
        ('23/08/02', '2002-08-23 00:00:00', '2002-08-23 00:00:00'),
        ('23:59 on 31 Dec 2023', '2023-12-31 23:59:00', '2023-12-31 23:59:00'),
        ('25 03 Sep', '2025-09-03 00:00:00', '2025-09-03 00:00:00'),
        ('25 09 03', '2003-09-25 00:00:00', '2003-09-25 00:00:00'),
        ('25 09 2003', '2003-09-25 00:00:00', '2003-09-25 00:00:00'),
        ('25 Sep 2003', '2003-09-25 00:00:00', '2003-09-25 00:00:00'),
        ('25-09-2003', '2003-09-25 00:00:00', '2003-09-25 00:00:00'),
        ('25-Sep-2003', '2003-09-25 00:00:00', '2003-09-25 00:00:00'),
        ('25.09.2003', '2003-09-25 00:00:00', '2003-09-25 00:00:00'),
        ('25.Sep.2003', '2003-09-25 00:00:00', '2003-09-25 00:00:00'),
        ('25/09/2003', '2003-09-25 00:00:00', '2003-09-25 00:00:00'),
        ('25/Sep/2003', '2003-09-25 00:00:00', '2003-09-25 00:00:00'),
        ('2er août 2023 à midi', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('2st August', '0001-08-02 00:00:00', '0001-08-02 00:00:00'),
        ('2st August 2023 12:01 PM', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('2st August 2023 12:01:01 PM', '2023-08-02 12:01:01', '2023-08-02 12:01:01'),
        ('2st August 2023 at 12 AM', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('2st August 2023 at 12 PM', '2023-08-02 12:00:00', '2023-08-02 12:00:00'),
        ('2st day of August, 2023 at 12:01 PM', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('2st of August 2023 at Midnight', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('2st of August 2023 at Noon', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('2st of August, 2023 at 12:01 AM', '2023-08-02 00:01:00', '2023-08-02 00:01:00'),
        ('2st of August, 2023 at 12:01 PM', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('2st of May 2003', '2003-05-02 00:00:00', '2003-05-02 00:00:00'),
        ('3 AM', '0001-01-01 03:00:00', '0001-01-01 03:00:00'),
        ('3 PM', '0001-01-01 15:00:00', '0001-01-01 15:00:00'),
        ('31-12-2023 23:59:59', '2023-12-31 23:59:59', '2023-12-31 23:59:59'),
        ('31-Dec-00', '2000-12-31 00:00:00', '2000-12-31 00:00:00'),
        ('31/12/2023 23:59:59', '2023-12-31 23:59:59', '2023-12-31 23:59:59'),
        ('31st December 2023 23:59:59', '2023-12-31 23:59:59', '2023-12-31 23:59:59'),
        ('36m05', '0001-01-01 00:36:05', '0001-01-01 00:36:05'),
        ('36m05 s', '0001-01-01 00:36:05', '0001-01-01 00:36:05'),
        ('36m5', '0001-01-01 00:36:05', '0001-01-01 00:36:05'),
        ('36m5s', '0001-01-01 00:36:05', '0001-01-01 00:36:05'),
        ('3am', '0001-01-01 03:00:00', '0001-01-01 03:00:00'),
        ('3pm', '0001-01-01 15:00:00', '0001-01-01 15:00:00'),
        ('3rd of May 2001', '2001-05-03 00:00:00', '2001-05-03 00:00:00'),
        ('4 Jul 1976', '1976-07-04 00:00:00', '1976-07-04 00:00:00'),
        ('4 jul 1976', '1976-07-04 00:00:00', '1976-07-04 00:00:00'),
        ('53.123123s', '0001-01-01 00:00:53.123123', '0001-01-01 00:00:53.123123'),
        ('5:50 A.M. on June 13, 1990', '1990-06-13 05:50:00', '1990-06-13 05:50:00'),
        ('5:50 P.M. on June 13, 1990', '1990-06-13 17:50:00', '1990-06-13 17:50:00'),
        ('5th of March 2001', '2001-03-05 00:00:00', '2001-03-05 00:00:00'),
        ('7 4 1976', '1976-07-04 00:00:00', '1976-07-04 00:00:00'),
        ('7-4-76', '1976-07-04 00:00:00', '1976-07-04 00:00:00'),
        ('8 02 2023', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('8 02 2023 12:01', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('8 02 2023 12:01:01', '2023-08-02 12:01:01', '2023-08-02 12:01:01'),
        ('8 2 2023', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('8 2 2023 12:01', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('8 2 2023 12:01:01', '2023-08-02 12:01:01', '2023-08-02 12:01:01'),
        ('8/2/2023 12:01', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('950404 122212', '1995-04-04 12:22:12', '1995-04-04 12:22:12'),
        ('April 2009', '2009-04-01 00:00:00', '2009-04-01 00:00:00'),
        ('Aug 2, 2023', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('Aug 2, 2023 01:01:01', '2023-08-02 01:01:01', '2023-08-02 01:01:01'),
        ('Aug 2, 2023 12:01 AM', '2023-08-02 00:01:00', '2023-08-02 00:01:00'),
        ('Aug 2, 2023 12:01 PM', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('Aug 2, 2023 12:01:01', '2023-08-02 12:01:01', '2023-08-02 12:01:01'),
        ('Aug 2st, 2023', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('Aug-02-2023 12:01 AM', '2023-08-02 00:01:00', '2023-08-02 00:01:00'),
        ('Aug-02-2023 12:01 PM', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('Aug-2-2023 12:01 AM', '2023-08-02 00:01:00', '2023-08-02 00:01:00'),
        ('Aug-2-2023 12:01 PM', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('August 2 2023 12:01 AM', '2023-08-02 00:01:00', '2023-08-02 00:01:00'),
        ('August 2 2023 12:01 PM', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ("August 2, '23'", '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('August 2, 2023', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('August 2, 2023 01:01:01', '2023-08-02 01:01:01', '2023-08-02 01:01:01'),
        ('August 2, 2023 12:01 AM', '2023-08-02 00:01:00', '2023-08-02 00:01:00'),
        ('August 2, 2023 12:01 PM', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('August 2, 2023 12:01:01', '2023-08-02 12:01:01', '2023-08-02 12:01:01'),
        ('August 2, 2023 at 01:01', '2023-08-02 01:01:00', '2023-08-02 01:01:00'),
        ('August 2, 2023 at 12:01', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('August 2, 2023 at 12:01 AM', '2023-08-02 00:01:00', '2023-08-02 00:01:00'),
        ('August 2, 2023 at 12:01 PM', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('August 2, 2023 at 12:01 PM AKDT', '2023-08-02 12:01:00', '2023-08-02 12:01:00-08:00'),
        ('August 2, 2023 at 12:01 PM AKST', '2023-08-02 12:01:00', '2023-08-02 12:01:00-09:00'),
        ('August 2, 2023 at 12:01 PM CDT', '2023-08-02 12:01:00', '2023-08-02 12:01:00-05:00'),
        ('August 2, 2023 at 12:01 PM EDT', '2023-08-02 12:01:00', '2023-08-02 12:01:00-04:00'),
        ('August 2, 2023 at 12:01 PM EST', '2023-08-02 12:01:00', '2023-08-02 12:01:00-05:00'),
        ('August 2, 2023 at 12:01 PM HST', '2023-08-02 12:01:00', '2023-08-02 12:01:00-10:00'),
        ('August 2, 2023 at 12:01 PM MDT', '2023-08-02 12:01:00', '2023-08-02 12:01:00-06:00'),
        ('August 2, 2023 at 12:01 PM MST', '2023-08-02 12:01:00', '2023-08-02 12:01:00-07:00'),
        ('August 2, 2023 at 12:01 PM PDT', '2023-08-02 12:01:00', '2023-08-02 12:01:00-07:00'),
        ('August 2, 2023 at 12:01 PM PST', '2023-08-02 12:01:00', '2023-08-02 12:01:00-08:00'),
        ('August 2, 2023 at 12:01 PM UTC', '2023-08-02 12:01:00', '2023-08-02 12:01:00+00:00'),
        ('August 2, 2023, at 12:01 AM', '2023-08-02 00:01:00', '2023-08-02 00:01:00'),
        ('August 2, 2023, at 12:01 PM', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('August 2, 2023, twelve PM', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ("August 2, 2023, twelve o'clock PM", '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('August 2st', '0001-08-02 00:00:00', '0001-08-02 00:00:00'),
        ('August 32', '2032-08-01 00:00:00', '2032-08-01 00:00:00'),
        ('Feb 30', '2030-02-01 00:00:00', '2030-02-01 00:00:00'),
        ('Feb 28', '0001-02-28 00:00:00', '0001-02-28 00:00:00'),
        ('Feb 29', '0001-02-28 00:00:00', '0001-02-28 00:00:00'),
        ('August 2st 2023', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('August 2st 2023 12:01:01 AM', '2023-08-02 00:01:01', '2023-08-02 00:01:01'),
        ('August 2st 2023 12:01:01 PM', '2023-08-02 12:01:01', '2023-08-02 12:01:01'),
        ('August 2st, 2023 01:01', '2023-08-02 01:01:00', '2023-08-02 01:01:00'),
        ('August 2st, 2023 12:01 AM', '2023-08-02 00:01:00', '2023-08-02 00:01:00'),
        ('August 2st, 2023 12:01 PM', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('August 2st, 2023 12:01 PM +05:30', '2023-08-02 12:01:00', '2023-08-02 12:01:00+05:30'),
        ('August 2st, 2023 12:01 PM -05:30', '2023-08-02 12:01:00', '2023-08-02 12:01:00-05:30'),
        ('August 2st, 2023 12:01 PM AKDT', '2023-08-02 12:01:00', '2023-08-02 12:01:00-08:00'),
        ('August 2st, 2023 12:01 PM AKST', '2023-08-02 12:01:00', '2023-08-02 12:01:00-09:00'),
        ('August 2st, 2023 12:01 PM EST', '2023-08-02 12:01:00', '2023-08-02 12:01:00-05:00'),
        ('August 2st, 2023 12:01 PM GMT', '2023-08-02 12:01:00', '2023-08-02 12:01:00+00:00'),
        ('August 2st, 2023 12:01 PM HST', '2023-08-02 12:01:00', '2023-08-02 12:01:00-10:00'),
        ('August 2st, 2023 12:01 PM MST', '2023-08-02 12:01:00', '2023-08-02 12:01:00-07:00'),
        ('August 2st, 2023 12:01 PM PST', '2023-08-02 12:01:00', '2023-08-02 12:01:00-08:00'),
        ('August 2st, 2023 12:01 PM UTC', '2023-08-02 12:01:00', '2023-08-02 12:01:00+00:00'),
        ('August 2st, 2023 12h', '2023-08-02 12:00:00', '2023-08-02 12:00:00'),
        ('August 2st, 2023 12h01m', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('August 2st, 2023 12h01m01s', '2023-08-02 12:01:01', '2023-08-02 12:01:01'),
        ('August 2st, 2023 at 12 AM', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('August 2st, 2023 at 12 PM', '2023-08-02 12:00:00', '2023-08-02 12:00:00'),
        ('August 2st, 2023 at 12:01 AM', '2023-08-02 00:01:00', '2023-08-02 00:01:00'),
        ('August 2st, 2023 at 12:01 PM', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('August 2st, 2023, at 12:01 PM +05:30', '2023-08-02 12:01:00', '2023-08-02 12:01:00+05:30'),
        ('August 2st, 2023, at 12:01 PM -05:30', '2023-08-02 12:01:00', '2023-08-02 12:01:00-05:30'),
        ('August 2st, 2023, at 12:01 PM AKDT', '2023-08-02 12:01:00', '2023-08-02 12:01:00-08:00'),
        ('August 2st, 2023, at 12:01 PM AKST', '2023-08-02 12:01:00', '2023-08-02 12:01:00-09:00'),
        ('August 2st, 2023, at 12:01 PM EST', '2023-08-02 12:01:00', '2023-08-02 12:01:00-05:00'),
        ('August 2st, 2023, at 12:01 PM GMT', '2023-08-02 12:01:00', '2023-08-02 12:01:00+00:00'),
        ('August 2st, 2023, at 12:01 PM HST', '2023-08-02 12:01:00', '2023-08-02 12:01:00-10:00'),
        ('August 2st, 2023, at 12:01 PM MST', '2023-08-02 12:01:00', '2023-08-02 12:01:00-07:00'),
        ('August 2st, 2023, at 12:01 PM PST', '2023-08-02 12:01:00', '2023-08-02 12:01:00-08:00'),
        ('August 2st, 2023, at 12:01 PM UTC', '2023-08-02 12:01:00', '2023-08-02 12:01:00+00:00'),
        ('August First, Twenty Twenty-Three', '0001-08-01 00:00:00', '0001-08-01 00:00:00'),
        ('August first', '0001-08-01 00:00:00', '0001-08-01 00:00:00'),
        ('August the 2st, 2023', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('August the First, Two Thousand Twenty-Three', '0001-08-01 00:00:00', '0001-08-01 00:00:00'),
        ('August the first, year two thousand twenty-three, at twelve PM', '0001-08-01 00:00:00', '0001-08-01 00:00:00'),
        ('August-02-2023 12:01 AM', '2023-08-02 00:01:00', '2023-08-02 00:01:00'),
        ('August-02-2023 12:01 PM', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('August-2-2023 12:01 AM', '2023-08-02 00:01:00', '2023-08-02 00:01:00'),
        ('August-2-2023 12:01 PM', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        ('December.0031.30', '0031-12-30 00:00:00', '0031-12-30 00:00:00'),
        ('Feb of 99', '1999-02-01 00:00:00', '1999-02-01 00:00:00'),
        ('Feb-02', '0001-02-02 00:00:00', '0001-02-02 00:00:00'),
        ('Feb-02-99', '1999-02-02 00:00:00', '1999-02-02 00:00:00'),
        ('First August 2023', '2023-08-01 00:00:00', '2023-08-01 00:00:00'),
        ('First day of August 2023, 12:01 AM', '2023-08-01 00:01:00', '2023-08-01 00:01:00'),
        ('First day of August 2023, 12:01 PM', '2023-08-01 12:01:00', '2023-08-01 12:01:00'),
        ('First of August', '0001-08-01 00:00:00', '0001-08-01 00:00:00'),
        ('First of August 2023 at 12 AM', '2023-08-01 00:00:00', '2023-08-01 00:00:00'),
        ('First of August 2023 at 12 PM', '2023-08-01 12:00:00', '2023-08-01 12:00:00'),
        ('First of August, Twenty Twenty-Three', '0001-08-01 00:00:00', '0001-08-01 00:00:00'),
        ('First of August, Two Thousand and Twenty-Three', '0001-08-01 00:00:00', '0001-08-01 00:00:00'),
        ('I have a meeting on March 1, 1974.', '1974-03-01 00:00:00', '1974-03-01 00:00:00'),
        ('Jan 2 1999 11:23:34.578', '1999-01-02 11:23:34.578000', '1999-01-02 11:23:34.578000'),
        ('Jan 29, 1945 14:45 AM I going to see you there?', '1945-01-29 14:45:00', '1945-01-29 14:45:00'),
        ('July 4, 1976', '1976-07-04 00:00:00', '1976-07-04 00:00:00'),
        ('July 4, 1976 12:01:02 am', '1976-07-04 00:01:02', '1976-07-04 00:01:02'),
        ('Meet me at 3:01AM on December 3rd, 2003 at the AM/PM on Sunset', '2003-12-03 03:01:00', '2003-12-03 03:01:00'),
        ('Meet me at the AM/PM on Sunset at 3:01 PM on December 3rd, 2003', '2003-12-03 15:01:00', '2003-12-03 15:01:00'),
        ('Midday, August 2, 2023', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('Midnight, August 2, 2023', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('Mon Jan  2 04:24:27 1995', '1995-01-02 04:24:27', '1995-01-02 04:24:27'),
        ('Mon, 2 Aug 2023 12:01 PM', '2023-07-31 12:01:00', '2023-07-31 12:01:00'),
        ('Mon, Aug 2st, 2023 at 12:01 PM', '2023-07-31 12:01:00', '2023-07-31 12:01:00'),
        ('Mon, August 2, 2023 12:01 PM', '2023-07-31 12:01:00', '2023-07-31 12:01:00'),
        ('Mon, August 2, 2023 at 12:01 AM', '2023-07-31 00:01:00', '2023-07-31 00:01:00'),
        ('Monday, 2 August 2023 12:01 PM', '2023-07-31 12:01:00', '2023-07-31 12:01:00'),
        ('Monday, August 2, 2023 12:01 PM', '2023-07-31 12:01:00', '2023-07-31 12:01:00'),
        ('Monday, August 2st, 2023 at 12:01 AM', '2023-07-31 00:01:00', '2023-07-31 00:01:00'),
        ('Noon, August 2, 2023', '2023-08-02 00:00:00', '2023-08-02 00:00:00'),
        ('November 5, 1994, 8:15:30 am +23:59 (EST)', '1994-11-05 08:15:30', '1994-11-05 08:15:30+23:59'),
        ('November 5, 1994, 8:15:30 am +23:59(EST)', '1994-11-05 08:15:30', '1994-11-05 08:15:30+23:59'),
        ('November 5, 1994, 8:15:30 am EST', '1994-11-05 08:15:30', '1994-11-05 08:15:30-05:00'),
        ('November 5, 1994, 8:15:30 am EST+23:59', '1994-11-05 08:15:30', '1994-11-05 08:15:30-23:59'),
        ('October', '0001-10-01 00:00:00', '0001-10-01 00:00:00'),
        ('On June 8th, 2020, I am going to be the first man on Mars', '2020-06-08 00:00:00', '2020-06-08 00:00:00'),
        ('Sat 2023-08-02', '2023-08-05 00:00:00', '2023-08-05 00:00:00'),
        ('Sep', '0001-09-01 00:00:00', '0001-09-01 00:00:00'),
        ('Sep 10:36:28', '0001-09-01 10:36:28', '0001-09-01 10:36:28'),
        ('Sep 2003', '2003-09-01 00:00:00', '2003-09-01 00:00:00'),
        ('Sep 25 2003', '2003-09-25 00:00:00', '2003-09-25 00:00:00'),
        ('Sep-25-2003', '2003-09-25 00:00:00', '2003-09-25 00:00:00'),
        ('Sep.25.2003', '2003-09-25 00:00:00', '2003-09-25 00:00:00'),
        ('Sep/25/2003', '2003-09-25 00:00:00', '2003-09-25 00:00:00'),
        ("The first of August, 2023, at twelve o'clock PM", '2023-08-01 00:00:00', '2023-08-01 00:00:00'),
        ('Thu 10:36:28', '0001-01-04 10:36:28', '0001-01-04 10:36:28'),
        ('Thu Sep 10:36:28', '0001-08-30 10:36:28', '0001-08-30 10:36:28'),
        ('Thu Sep 24 10:36:28', '0001-09-27 10:36:28', '0001-09-27 10:36:28'),
        ('Thu Sep 24 10:36:28 2003', '2003-09-25 10:36:28', '2003-09-25 10:36:28'),
        ('Thu Sep 24 10:36:28 BRST 2003', '2003-09-25 10:36:28', '2003-09-25 10:36:28'),
        ('Thu Sep 24 2003', '2003-09-25 00:00:00', '2003-09-25 00:00:00'),
        ('Thu, 24 Sep 2003 10:49:41 -0300', '2003-09-25 10:49:41', '2003-09-25 10:49:41-03:00'),
        ('Today is 25 of September of 2003, exactly at 10:49:41 with timezone -03:00.', '2003-09-25 10:49:41', '2003-09-25 10:49:41-03:00'),
        ('Wed', '0001-01-03 00:00:00', '0001-01-03 00:00:00'),
        ('Wed, 03 Aug 2023 12:01:01 +0000', '2023-08-02 12:01:01', '2023-08-02 12:01:01+00:00'),
        ('Wed, 03 Aug 2023 12:01:01 EST', '2023-08-02 12:01:01', '2023-08-02 12:01:01-05:00'),
        ('Wed, 03 Aug 2023 12:01:01 GMT', '2023-08-02 12:01:01', '2023-08-02 12:01:01+00:00'),
        ('Wed, 03 Aug 2023 12:01:01 PST', '2023-08-02 12:01:01', '2023-08-02 12:01:01-08:00'),
        ('Wed, 03 Aug 2023 12:01:01 UTC', '2023-08-02 12:01:01', '2023-08-02 12:01:01+00:00'),
        ("Wed, July 11, '96'", '1996-07-10 00:00:00', '1996-07-10 00:00:00'),
        ('Wednesday', '0001-01-03 00:00:00', '0001-01-03 00:00:00'),
        ('le 2 août 2023 à 12h01', '2023-08-02 12:01:00', '2023-08-02 12:01:00'),
        # fmt: on
    ]

    def test_all(self) -> None:
        pass

    # Utils
    def log_start(self, msg: str) -> None:
        msg = "START TEST '%s': %s" % (self.name, msg)
        print(msg.ljust(60), end="\r")
        self._start_time = time.perf_counter()

    def log_ended(self, msg: str, skip: bool = False) -> None:
        self._ended_time = time.perf_counter()
        msg = "%s TEST '%s': %s" % ("SKIP" if skip else "PASS", self.name, msg)
        if self._start_time is not None:
            msg += " (%.6fs)" % (self._ended_time - self._start_time)
        print(msg.ljust(60))


class Test_Delta(TestCase):
    name = "Delta"

    def test_all(self, rounds: int) -> None:
        self.test_addition(rounds, "Relative")
        self.test_addition(rounds, "Absolute")
        self.test_addition(rounds, "Mixed")
        self.test_substraction(rounds, "Relative")
        self.test_substraction(rounds, "Absolute")
        self.test_substraction(rounds, "Mixed")
        self.test_numeric()
        self.test_equal_timedelta(rounds)
        self.test_equal_relativedelta(rounds, "Relative")
        self.test_equal_relativedelta(rounds, "Absolute")
        self.test_equal_relativedelta(rounds, "Mixed")
        self.test_boolean()
        self.test_typing()

    def test_addition(
        self,
        rounds: int,
        mode: Literal["Relative", "Absolute", "Mixed"],
    ) -> None:
        test = f"Addition ({mode})"
        self.log_start(test)

        date = datetime.date(5000, 1, 2)
        dt = datetime.datetime(5000, 1, 2, 3, 4, 5, 6)
        td = datetime.timedelta(1, 1, 1, 1, 1, 1, 1)
        c_td2 = Delta(1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
        r_td2 = relativedelta(
            years=1,
            months=1,
            days=1,
            weeks=1,
            hours=1,
            minutes=1,
            seconds=1,
            microseconds=1,
            year=1,
            month=1,
            day=1,
            hour=1,
            minute=1,
            second=1,
            microsecond=1,
        )
        for _ in range(rounds):
            c_td, r_td = self._random_deltas(mode)
            # Addition with date
            try:
                r_res = date + r_td
            except (ValueError, OverflowError):
                pass
            else:
                self.assertEqual(date + c_td, r_res.date())

            # Addition with datetime
            try:
                r_res = dt + r_td
            except (ValueError, OverflowError):
                pass
            else:
                self.assertEqual(dt + c_td, r_res)

            # Addition with timedelta
            try:
                r_res = td + r_td
            except (ValueError, OverflowError):
                pass
            else:
                self.assertEqual(td + c_td, r_res)

            # Addition with another Delta
            self.assertEqual(c_td + c_td2, r_td + c_td2)

            # Addition with another relativedelta
            self.assertEqual(c_td + r_td2, r_td + r_td2)

        self.log_ended(test)

    def test_substraction(
        self,
        rounds: int,
        mode: Literal["Relative", "Absolute", "Mixed"],
    ) -> None:
        test = f"Substraction ({mode})"
        self.log_start(test)

        date = datetime.date(5000, 1, 2)
        dt = datetime.datetime(5000, 1, 2, 3, 4, 5, 6)
        td = datetime.timedelta(1, 1, 1, 1, 1, 1, 1)
        c_td2 = Delta(1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
        r_td2 = relativedelta(
            years=1,
            months=1,
            days=1,
            weeks=1,
            hours=1,
            minutes=1,
            seconds=1,
            microseconds=1,
            year=1,
            month=1,
            day=1,
            hour=1,
            minute=1,
            second=1,
            microsecond=1,
        )
        for _ in range(rounds):
            c_td, r_td = self._random_deltas(mode)

            # Substraction with date
            try:
                r_res = date - r_td
            except (ValueError, OverflowError):
                pass
            else:
                self.assertEqual(date - c_td, r_res.date())

            # Substraction with datetime
            try:
                r_res = dt - r_td
            except (ValueError, OverflowError):
                pass
            else:
                self.assertEqual(dt - c_td, r_res)

            # Substraction with timedelta
            try:
                r_res = td - r_td
            except (ValueError, OverflowError):
                pass
            else:
                self.assertEqual(td - c_td, r_res)

            # Substraction with another Delta
            self.assertEqual(c_td - c_td2, r_td - c_td2)

            # Substraction with another relativedelta
            self.assertEqual(c_td - r_td2, r_td - r_td2)

        self.log_ended(test)

    def test_numeric(self) -> None:
        test = "Numeric"
        self.log_start(test)

        rel_args = {
            "years": 1000,
            "months": 1000,
            "days": 1000,
            "hours": 1000,
            "minutes": 1000,
            "seconds": 1000,
            "microseconds": 1000,
        }
        abs_args = {
            "year": 1000,
            "month": 1000,
            "day": 1000,
            "hour": 1000,
            "minute": 1000,
            "second": 1000,
            "microsecond": 1000,
        }
        td = Delta(**rel_args, **abs_args)

        # Integer
        i = 2
        add_i = Delta(**{k: v + i for k, v in rel_args.items()}, **abs_args)
        self.assertEqual(td + i, add_i)
        self.assertEqual(i + td, add_i)
        sub_i = Delta(**{k: v - i for k, v in rel_args.items()}, **abs_args)
        self.assertEqual(td - i, sub_i)
        rsub_i = Delta(**{k: i - v for k, v in rel_args.items()}, **abs_args)
        self.assertEqual(i - td, rsub_i)
        mul_i = Delta(**{k: v * i for k, v in rel_args.items()}, **abs_args)
        self.assertEqual(td * i, mul_i)
        self.assertEqual(i * td, mul_i)

        # Negate
        td_neg = Delta(**{k: -v for k, v in rel_args.items()}, **abs_args)
        self.assertEqual(-td, td_neg)

        # Absolute
        self.assertEqual(abs(td_neg), td)

        # Float
        f = 2.2
        self.assertEqual(td - f, -(f - td))
        self.assertEqual(td / f, td * (1 / f))

        self.log_ended(test)

    def test_equal_timedelta(self, rounds: int) -> None:
        test = "Equal Timedelta"
        self.log_start(test)

        dt = datetime.datetime(5000, 1, 2, 3, 4, 5, 6)

        for _ in range(rounds):
            days = randint(-100_000, 100_000)
            seconds = randint(-1_000_000, 1_000_000)
            microseconds = randint(-10_000_000, 10_000_000)

            td = datetime.timedelta(days, seconds, microseconds)
            c_td = Delta(days=days, seconds=seconds, microseconds=microseconds)
            self.assertEqual(c_td, td)

            try:
                dt1 = dt + td
            except (ValueError, OverflowError):
                pass
            else:
                self.assertEqual(dt + c_td, dt1)

        self.log_ended(test)

    def test_equal_relativedelta(
        self,
        rounds: int,
        mode: Literal["Relative", "Absolute", "Mixed"],
    ) -> None:
        test = "Equal Relativedelta"
        self.log_start(test)

        for _ in range(rounds):
            c_td, r_td = self._random_deltas(mode)
            self.assertEqual(c_td, r_td)

        self.log_ended(test)

    def test_boolean(self) -> None:
        test = "Boolean"
        self.log_start(test)

        self.assertFalse(Delta())
        self.assertTrue(Delta(seconds=1))
        self.assertTrue(Delta(second=1))

        self.log_ended(test)

    def test_typing(self) -> None:
        test = "Typing"
        self.log_start(test)

        td = Delta(microseconds=1)

        # return datetime.datetime
        for obj in (datetime.datetime.now(), Pydt.now(), pd.Timestamp.now(), pl.now()):
            self.assertTrue(isinstance(td + obj, obj.__class__))
            self.assertTrue(isinstance(obj + td, obj.__class__))
            self.assertTrue(isinstance(obj - td, obj.__class__))
            with self.assertRaises(TypeError):
                td - obj
        self.assertTrue(isinstance(td + np.datetime64(1, "s"), datetime.datetime))
        self.assertTrue(isinstance(td + np.datetime64(1, "ns"), datetime.datetime))
        self.assertTrue(isinstance(np.datetime64(1, "s") + td, datetime.datetime))
        self.assertFalse(isinstance(np.datetime64(1, "ns") + td, datetime.datetime))
        self.assertTrue(isinstance(np.datetime64(1, "s") - td, datetime.datetime))
        self.assertFalse(isinstance(np.datetime64(1, "ns") - td, datetime.datetime))

        # return datetime.date
        for obj in (datetime.date.today(), pl.Date.today()):
            self.assertTrue(isinstance(td + obj, obj.__class__))
            self.assertTrue(isinstance(obj + td, obj.__class__))
            self.assertTrue(isinstance(obj - td, obj.__class__))
            with self.assertRaises(TypeError):
                td - obj

        # return Delta
        for obj in (
            Delta(1),
            datetime.timedelta(1),
            pd.Timedelta(1, "D"),
            relativedelta(days=1),
            1,
            1.1,
        ):
            self.assertTrue(isinstance(td + obj, Delta))
            self.assertTrue(isinstance(obj + td, Delta))
            self.assertTrue(isinstance(obj - td, Delta))
            self.assertTrue(isinstance(td - obj, Delta))
        self.assertEqual(td + np.timedelta64(1, "s"), Delta(seconds=1, microseconds=1))
        self.assertEqual(td + np.timedelta64(1, "ns"), td)
        self.assertEqual(np.timedelta64(1, "s") + td, Delta(seconds=1, microseconds=1))
        self.assertNotEqual(np.timedelta64(1, "ns") + td, td)
        self.assertEqual(td - np.timedelta64(1, "s"), Delta(seconds=-1, microseconds=1))
        self.assertEqual(td - np.timedelta64(1, "ns"), td)
        self.assertEqual(np.timedelta64(1, "s") - td, Delta(seconds=1, microseconds=-1))
        self.assertNotEqual(np.timedelta64(1, "ns") - td, td)

        self.log_ended(test)

    # Utils
    def _random_deltas(
        self,
        mode: Literal["Relative", "Absolute", "Mixed"],
    ) -> tuple[Delta, relativedelta]:
        args = {}
        if mode == "Relative" or mode == "Mixed":
            args |= {
                "years": randint(-9999, 9999),
                "months": randint(-1000, 1000),
                "days": randint(-1000, 1000),
                "weeks": randint(-1000, 1000),
                "hours": randint(-1000, 1000),
                "minutes": randint(-1000, 1000),
                "seconds": randint(-10_000, 10_000),
                "microseconds": randint(-10_000_000, 10_000_000),
            }
        if mode == "Absolute" or mode == "Mixed":
            args |= {
                "year": randint(1, 9999),
                "month": randint(1, 12),
                "day": randint(1, 31),
                "hour": randint(0, 23),
                "minute": randint(0, 59),
                "second": randint(0, 59),
                "microsecond": randint(0, 999_999),
            }
        return Delta(**args), relativedelta(**args)


class Test_Parser(TestCase):
    name = "Parser"

    def test_all(self) -> None:
        self.test_configs()
        self.test_timelex()
        self.test_parser()

    def test_configs(self) -> None:
        from cytimes.parser import Configs
        from dateutil.parser import parserinfo

        test = "Configs"
        self.log_start(test)

        # Test if default has conflicts
        cfg = Configs()

        # Test import from parserinfo
        try:
            cfg = Configs.from_parserinfo("xxx")
        except errors.InvalidParserInfo:
            pass

        info = parserinfo()
        cfg = Configs.from_parserinfo(info)

        # Test word conflicts validation
        try:
            cfg.add_hms_flag(1, 123)
        except errors.InvalidConfigsValue:
            pass
        try:
            cfg.add_hms_flag(1, "AM")
        except errors.InvalidConfigsValue:
            pass
        # Test value validation
        try:
            cfg.add_hms_flag(-1, "xxx")
        except errors.InvalidConfigsValue:
            pass

        self.log_ended(test)

    def test_timelex(self) -> None:
        from cytimes.parser import timelex
        from dateutil.parser._parser import _timelex

        test = "Timelex"
        self.log_start(test)

        for dts in self.dts:
            dt = dts[0]
            cmp = list(_timelex(dt))
            while cmp[0] == " ":
                cmp.pop(0)
            val = timelex(dt)
            assert cmp == val, f"{repr(dt)}:\n{cmp}\n{val}"

        self.log_ended(test)

    def test_parser(self) -> None:
        from cytimes.parser import parse, Configs

        test = "Parser"
        self.log_start(test)

        cfg = Configs()
        cfg.add_tz("AKDT", -8)
        cfg.add_tz("AKST", -9)
        cfg.add_tz("EST", -5)
        cfg.add_tz("HST", -10)
        cfg.add_tz("MST", -7)
        cfg.add_tz("PST", -8)
        cfg.add_tz("CDT", -5)
        cfg.add_tz("EDT", -4)
        cfg.add_tz("MDT", -6)
        cfg.add_tz("PDT", -7)

        default = datetime.date(1, 1, 1)
        for dts in self.dts:
            try:
                dt, base_no_tz, base_has_tz = dts
            except:
                print(dts)
                raise
            no_tz = parse(dt, default=default, ignoretz=True)
            assert base_no_tz == str(no_tz), "%r:\nBase: %r | Pars: %r" % (
                dt,
                base_no_tz,
                str(no_tz),
            )
            has_tz = parse(dt, default=default, ignoretz=False, cfg=cfg)
            assert base_has_tz == str(has_tz), "%r:\nBase: %r | Pars: %r" % (
                dt,
                base_has_tz,
                str(has_tz),
            )

        self.log_ended(test)


if __name__ == "__main__":
    Test_Delta().test_all(100_000)
    Test_Parser().test_all()
