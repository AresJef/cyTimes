# name: Upload Python Package
# on:
#   release:
#     types: [published]

# jobs:
#   build_wheels:
#     name: Build wheels on ${{matrix.arch}} for ${{ matrix.os }}
#     runs-on: ${{ matrix.os }}
#     timeout-minutes: 450
#     env:
#       CIBW_SKIP: "cp27-* cp34-* cp35-* pp27-* cp36-musllinux_aarch64 pp37-manylinux_aarch64 cp36-manylinux_aarch64 pp3*"
#       CIBW_BEFORE_BUILD: "pip install Cython>=3.0.0"
#     strategy:
#       matrix:
#         # os: [ubuntu-20.04, windows-latest, macos-latest]
#         os: [ubuntu-20.04, macos-latest]
#         arch: [auto]
#         include:
#         - os: ubuntu-20.04
#           arch: aarch64
#     steps:
#       - uses: actions/checkout@v3
#         with:
#           submodules: true
#       - uses: actions/setup-python@v4
#         name: Install Python
#         with:
#           python-version: '3.11'
#       - uses: docker/setup-qemu-action@v2
#         if: ${{ matrix.arch == 'aarch64' }}
#         name: Set up QEMU
#       - name: Install cibuildwheel
#         run: |
#           python -m pip install cibuildwheel==2.11.4 Cython>=3.0.0
#       - name: Build wheels
#         env:
#           CIBW_ARCHS_MACOS: x86_64 universal2
#           CIBW_ARCHS_LINUX: ${{matrix.arch}}
#         run: |
#           python -m cibuildwheel --output-dir wheelhouse
#       - uses: actions/upload-artifact@v2
#         with:
#           path: ./wheelhouse/*.whl
#           retention-days: 1
    
#   build_sdist:
#     name: Build source distribution
#     runs-on: ubuntu-latest
#     timeout-minutes: 40
#     env:
#       CIBW_SKIP: "cp27-* cp34-* pp27-* cp35-*"
#       CIBW_BEFORE_BUILD: "pip install Cython>=3.0.0 numpy>=1.25.2"
#     steps:
#       - uses: actions/checkout@v3
#         with:
#           submodules: true
#       - uses: actions/setup-python@v4
#         name: Install Python
#         with:
#           python-version: '3.11'
#       - name: Build sdist
#         run: |
#           pip install Cython>=3.0.0 numpy>=1.25.2
#           python setup.py build_ext --inplace
#           python setup.py sdist
#       - uses: actions/upload-artifact@v3
#         with:
#           path: dist/*.tar.gz
#           retention-days: 1
  
#   upload:
#     needs: [build_wheels, build_sdist]
#     runs-on: ubuntu-latest
#     steps:
#       - name: Download Artifacts
#         uses: actions/download-artifact@v3
#         with:
#           name: artifact
#           path: dist
#       - name: Publish to Test PyPI
#         uses: pypa/gh-action-pypi-publish@release/v1
#         with:
#           user: __token__
#           password: ${{ secrets.TEST_PYPI_API_TOKEN }}
#           repository-url: https://test.pypi.org/legacy/
        
name: Upload Python Package
on:
  release:
    types: [published]

jobs:
  build:
    name: Build on ${{matrix.arch}} for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        #os: [ubuntu-20.04, windows-latest, macos-latest]
        os: [ubuntu-20.04, macos-latest]
        arch: [auto]
        include:
        - os: ubuntu-20.04
          arch: aarch64
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Set up QEMU
        if: ${{ matrix.arch == 'aarch64' }}
        uses: docker/setup-qemu-action@v2
      - name: Install build & updates
        run: |
          python -m pip install build
          python -m pip install -U pip setuptools
      - name: Build package
        env:
          CIBW_ARCHS_MACOS: x86_64 universal2
          CIBW_ARCHS_LINUX: ${{matrix.arch}}
        run: |
          python -m build --outdir dist
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: ./dist/*
          
  upload:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist
      - name: Publish to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository-url: https://test.pypi.org/legacy/

# name: Upload Python Package
# on:
#   release:
#     types: [published]

# jobs:
#   build:
#     name: Build source distribution
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3
#       - name: Install Python
#         uses: actions/setup-python@v4
#         with:
#           python-version: '3.11'
#       - name: Install build & updates
#         run: |
#           python -m pip install build
#           python -m pip install -U pip setuptools
#       - name: Build package
#         run: |
#           python -m build --sdist --outdir dist
#       - name: Upload Artifacts
#         uses: actions/upload-artifact@v3
#         with:
#           name: dist
#           path: ./dist/*.tar.gz
          
#   upload:
#     needs: [build]
#     runs-on: ubuntu-latest
#     steps:
#       - name: Download Artifacts
#         uses: actions/download-artifact@v3
#         with:
#           name: dist
#           path: dist
#       - name: Publish to Test PyPI
#         uses: pypa/gh-action-pypi-publish@release/v1
#         with:
#           user: __token__
#           password: ${{ secrets.TEST_PYPI_API_TOKEN }}
#           repository-url: https://test.pypi.org/legacy/
          
